{"version":3,"file":"static/js/762.4ec3e147.chunk.js","mappings":"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","sources":["redux/selector.js","components/ContactList/StyleContactsList.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactsList.jsx","components/Filter/StyleFilter.jsx","components/Filter/Filter.jsx","components/Error/StyleError.jsx","components/Error/Error.jsx","components/EmptyContactsList/StyleEmptyContactsList.jsx","components/EmptyContactsList/EmptyContactsList.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectFilter = state => state.filter;\n","export const boxListStyle = {\n  width: '100%',\n  mt: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  bgcolor: 'rgba(25, 118, 210, 0.822)',\n  borderRadius: 5,\n  alignItems: 'center',\n};\n\nexport const listItemStyle = {\n  bgcolor: 'rgba(208, 224, 241, 0.822)',\n  borderRadius: 2,\n  mb: 1,\n};\n","import {\n  ListItem,\n  IconButton,\n  ListItemButton,\n  ListItemText,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { delContactThunk } from '../../api/fetchContacts';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SpinerDel } from 'components/Loader/Loader';\nimport { listItemStyle } from './StyleContactsList';\n\nexport const ContactItem = ({ contact }) => {\n  const [load, setLoad] = useState(false);\n  const { id, name, number } = contact;\n  const dispatch = useDispatch();\n\n  const deleteContact = contactId => {\n    setLoad(true);\n    dispatch(delContactThunk(contactId));\n  };\n\n  return (\n    <ListItem\n      key={id}\n      sx={listItemStyle}\n      secondaryAction={\n        <IconButton onClick={() => deleteContact(id)} aria-label=\"delete\">\n          {load ? <SpinerDel /> : <DeleteIcon />}\n        </IconButton>\n      }\n    >\n      <ListItemButton>\n        <ListItemText>\n          {name}: {number}\n        </ListItemText>\n      </ListItemButton>\n    </ListItem>\n  );\n};\n","import { selectFilter } from '../../redux/selector';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectPhoneBookValue } from '../../redux/phoneBook/phoneSelector';\nimport { getContactsThunk } from '../../api/fetchContacts';\nimport { useEffect, useState } from 'react';\nimport * as React from 'react';\nimport { Box, List, Typography, Avatar } from '@mui/material';\nimport ImportContactsIcon from '@mui/icons-material/ImportContacts';\nimport { Loader } from 'components/Loader/Loader';\nimport { ContactItem } from './ContactItem';\nimport { avatarStyle } from '../../pages/StylePages';\nimport { boxListStyle } from './StyleContactsList';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const [load, setLoad] = useState(true);\n  const phoneBook = useSelector(selectPhoneBookValue);\n  const filterPhoneBook = useSelector(selectFilter);\n\n  useEffect(() => {\n    setLoad(false);\n  }, []);\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const lowerFilter = filterPhoneBook.toLowerCase().trim();\n  const visibleContacts = phoneBook.filter(({ name }) =>\n    name.toLowerCase().includes(lowerFilter)\n  );\n\n  return (\n    <Box sx={boxListStyle}>\n      <Avatar sx={avatarStyle}>\n        <ImportContactsIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Your Contacts\n      </Typography>\n      {load && <Loader />}\n      <List sx={{ width: 396 }}>\n        {visibleContacts.map(contact => (\n          <ContactItem contact={contact} key={contact.id} />\n        ))}\n      </List>\n    </Box>\n  );\n};\n","export const boxFilterStyle = {\n  mt: 1,\n  display: 'flex',\n  justifyContent: 'space-between',\n  gap: 5,\n  alignItems: 'center',\n  borderRadius: 5,\n};\n","import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterSet } from '../../redux/filterSlice';\nimport { selectFilter } from '../../redux/selector';\nimport { Avatar, TextField, Box } from '@mui/material';\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\nimport { avatarStyle } from '../../pages/StylePages';\nimport { boxFilterStyle } from './StyleFilter';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterPhoneBook = useSelector(selectFilter);\n\n  const onChangeFilter = evt => {\n    const { value } = evt.currentTarget;\n    dispatch(filterSet(value));\n  };\n\n  return (\n    <Box component=\"div\" sx={boxFilterStyle}>\n      <Avatar sx={avatarStyle}>\n        <PersonSearchIcon />\n      </Avatar>\n      <TextField\n        margin=\"normal\"\n        inputProps={{\n          inputMode: 'text',\n          pattern: '^[a-zA-Zа-яА-Я]+(([a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$',\n        }}\n        sx={{\n          width: 324,\n          bgcolor: 'rgba(208, 224, 241, 0.822)',\n        }}\n        label=\"Find contacts by name:\"\n        type=\"text\"\n        name=\"filter\"\n        value={filterPhoneBook}\n        title=\"Enter the name\"\n        onChange={onChangeFilter}\n      />\n    </Box>\n  );\n};\n","export const boxErrorStyle = {\n  mt: 5,\n  width: 420,\n  p: 5,\n  borderRadius: 5,\n  backgroundColor: 'red',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n};\n","import { useSelector } from 'react-redux';\nimport { selectError } from '../../redux/phoneBook/phoneSelector';\nimport { Box, Typography } from '@mui/material';\nimport { boxErrorStyle } from './StyleError';\n\nexport const Error = () => {\n  const error = useSelector(selectError);\n\n  return (\n    <Box sx={boxErrorStyle}>\n      <Typography color=\"white\" component=\"h2\" variant=\"h5\">\n        We're sorry, {error}\n      </Typography>\n    </Box>\n  );\n};\n","export const boxStyle = {\n  width: '100%',\n  height: 56,\n  borderRadius: 5,\n  mt: 1,\n  display: 'flex',\n  justifyContent: 'center',\n  bgcolor: 'rgba(208, 224, 241, 0.822)',\n  alignItems: 'center',\n};\n","import { Box, Typography } from '@mui/material';\nimport { boxStyle } from './StyleEmptyContactsList';\n\nexport const EmptyContactsList = () => {\n  return (\n    <Box sx={boxStyle}>\n      <Typography component=\"h1\" variant=\"h5\">\n        You don't have any contacts yet\n      </Typography>\n    </Box>\n  );\n};\n","import { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactsList } from '../components/ContactList/ContactsList';\nimport { Filter } from '../components/Filter/Filter';\nimport { Error } from '../components/Error/Error';\nimport { useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectIsLoading,\n  selectPhoneBookValue,\n} from '../redux/phoneBook/phoneSelector';\nimport { CssBaseline, Container, Box } from '@mui/material';\nimport * as React from 'react';\nimport phone from '../photo/phone.jpg';\nimport { boxContactsStyle, containerContactsStyle } from './StylePages';\nimport { EmptyContactsList } from '../components/EmptyContactsList/EmptyContactsList';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const phoneBook = useSelector(selectPhoneBookValue);\n  return (\n    <Container\n      component=\"main\"\n      maxWidth=\"md\"\n      sx={containerContactsStyle(phone)}\n    >\n      <CssBaseline />\n      <Box sx={boxContactsStyle}>\n        <ContactForm />\n        <Filter />\n        {error ? <Error /> : <ContactsList />}\n        {phoneBook.length === 0 && !error && !isLoading && (\n          <EmptyContactsList />\n        )}\n      </Box>\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectFilter","state","filter","boxListStyle","width","mt","display","flexDirection","bgcolor","borderRadius","alignItems","listItemStyle","mb","ContactItem","_ref","contact","_useState","useState","_useState2","_slicedToArray","load","setLoad","id","name","number","dispatch","useDispatch","_jsx","ListItem","sx","secondaryAction","IconButton","onClick","contactId","delContactThunk","children","SpinerDel","DeleteIcon","ListItemButton","_jsxs","ListItemText","ContactsList","phoneBook","useSelector","selectPhoneBookValue","filterPhoneBook","useEffect","getContactsThunk","lowerFilter","toLowerCase","trim","visibleContacts","includes","Box","Avatar","avatarStyle","ImportContactsIcon","Typography","component","variant","Loader","List","map","boxFilterStyle","justifyContent","gap","Filter","PersonSearchIcon","TextField","margin","inputProps","inputMode","pattern","label","type","value","title","onChange","evt","currentTarget","filterSet","boxErrorStyle","p","backgroundColor","Error","error","selectError","color","boxStyle","height","EmptyContactsList","isLoading","selectIsLoading","Container","maxWidth","containerContactsStyle","phone","CssBaseline","boxContactsStyle","ContactForm","length"],"sourceRoot":""}